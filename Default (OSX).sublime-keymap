[
  // General...
  { "keys": ["ctrl+shift+."], "command": "erb" },
  { "keys": ["ctrl+super+r"], "command": "reveal_in_side_bar" },
  { "keys": ["ctrl+super+q"], "command": "side_bar_duplicate" },
  { "keys": ["f2"], "command": "side_bar_rename" },
  // { "keys": ["ctrl+alt+f"], "command": "side_bar_find_files_path_containing" },
  { "keys": ["super+k", "super+t"], "command": "title_case" },

  // Conflict with Chinese input methods tool
  { "keys": ["ctrl+alt+space"], "command": "expand_selection", "args": {"to": "scope"} },

  // Conflict with Rails File Switcher
  { "keys": ["super+1"], "command": "select_by_index", "args": { "index": 0 } },
  { "keys": ["super+2"], "command": "select_by_index", "args": { "index": 1 } },
  { "keys": ["super+3"], "command": "select_by_index", "args": { "index": 2 } },
  { "keys": ["super+4"], "command": "select_by_index", "args": { "index": 3 } },

  // Conflict with "Add new line before"...
  { "keys": ["super+shift+enter"], "command": "run_macro_file", "args": {"file": "Packages/Default/Add Line Before.sublime-macro"} },
  { "keys": ["super+k", "super+z"], "command": "max_pane" },

  // Open Filename Under Cursor
  { "keys": ["alt+o"], "command": "open_filename_under_cursor" },

  // Conflict with SublimeCodeIntel's command `code_intel_auto_complete`
  { "keys": ["super+j"], "command": "join_lines" },

  // Conflict with Ruby Test
  { "keys": ["super+shift+t"], "command": "reopen_last_file" },

  // Redefine Origami keymap
  { "keys": ["super+k", "super+k"], "command": "travel_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+k", "super+l"], "command": "travel_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+k", "super+j"], "command": "travel_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+k", "super+h"], "command": "travel_to_pane", "args": {"direction": "left"} },

  // Modified Tab Navigation
  {"keys": ["ctrl+tab"], "command": "next_view_in_pane"},
  {"keys": ["ctrl+shift+tab"], "command": "prev_view_in_pane" },

  // Vim-like move motion
  {"keys": ["alt+h"], "command": "move", "args": {"by": "characters", "forward": false}},
  {"keys": ["alt+j"], "command": "move", "args": {"by": "lines", "forward": true}},
  {"keys": ["alt+k"], "command": "move", "args": {"by": "lines", "forward": false}},
  {"keys": ["alt+l"], "command": "move", "args": {"by": "characters", "forward": true}},

  // Rails File Switcher
  { "keys": ["alt+1"], "command": "open_related_rails_model" },
  { "keys": ["alt+2"], "command": "open_related_rails_controller" },
  { "keys": ["alt+3"], "command": "open_related_rails_view" },

  // Vintage Lines
  {"keys": ["ctrl+t"], "command": "toggle_setting", "args": {"setting": "vintage_lines.force_mode"}},

  // move_tab.py
  { "keys": ["ctrl+super+left"], "command": "move_tab", "args": {"mod": -1} },
  { "keys": ["ctrl+super+right"], "command": "move_tab", "args": {"mod": 1} },

  // scroll-to-top-middle-bottom
  { "keys": ["super+m", "super+t"], "command": "move_caret_top" },
  { "keys": ["super+m", "super+m"], "command": "move_caret_middle"},
  { "keys": ["super+m", "super+b"], "command": "move_caret_bottom"},

  // open current file in Finder
  { "keys": ["super+shift+o"], "command": "open_dir", "args": {"dir": "$file_path", "file": "$file_name"} },

  // RubyTest
  { "keys": ["super+k", "super+r"], "command": "run_single_ruby_test" }, // single test
  { "keys": ["super+k", "super+x"], "command": "run_all_ruby_test" }, // test file
  { "keys": ["super+k", "super+e"], "command": "run_last_ruby_test" }, // test file

  // move_by_paragraph
  {"keys": ["alt+["],          "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false}},
  {"keys": ["alt+]"],          "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true}},
  {"keys": ["shift+alt+["],    "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false, "extend": true}},
  {"keys": ["shift+alt+]"],    "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true, "extend": true}},

  {"keys": ["alt+up"],         "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false}},
  {"keys": ["alt+down"],       "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true}},
  {"keys": ["shift+alt+up"],   "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false, "extend": true}},
  {"keys": ["shift+alt+down"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true, "extend": true}},

  // Mark
  { "keys": ["super+k", "super+m"], "command": "set_mark" },

  // Mark and move
  { "keys": ["super+m", "super+x"], "command": "mark_and_move_do_it_all" },
  { "keys": ["super+m", "super+n"], "command": "mark_and_move_next" },
  { "keys": ["super+m", "super+p"], "command": "mark_and_move_prev" },
  { "keys": ["super+m", "super+r"], "command": "mark_and_move_recall" },
  { "keys": ["super+m", "super+c"], "command": "mark_and_move_clear" },

  // GlueViews
  { "keys": ["alt+p"], "command": "glue_views_add"},
  { "keys": ["alt+m"], "command": "glue_views_remove"},
  { "keys": ["alt+x"], "command": "glue_views_clear"},

  // CodeIntel
  { "keys": ["alt+d"], "command": "goto_python_definition" },
  { "keys": ["ctrl+shift+space"], "command": "code_intel_auto_complete" },
  { "keys": ["alt+shift+d"], "command": "back_to_python_definition"},

  // Go to left bracket
  {
      "keys": ["ctrl+up"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect",
              "args": {"select": "left"}
          }
      }
  },

  // Go to right bracket
  {
      "keys": ["ctrl+down"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect",
              "args": {"select": "right"}
          }
      }
  },

  // Remove brackets
  {
      "keys": ["super+shift+b", "super+shift+r"],
      "command": "bh_remove_brackets"
  },

  // Select text between brackets
  {
      "keys": ["super+shift+b", "super+shift+s"],
      "command": "bh_key",
      "args":
      {
          "lines" : true,
          "plugin":
          {
              "type": ["__all__"],
              "command": "bh_modules.bracketselect"
          }
      }
  },

  // Select tag name of HTML/XML tag (both opening name and closing)
  {
      "keys": ["super+shift+b", "super+shift+t"],
      "command": "bh_key",
      "args":
      {
          "plugin":
          {
              "type": ["cfml", "html", "angle"],
              "command": "bh_modules.tagnameselect"
          }
      }
  },

  // Select the attribute to the right of the cursor (will wrap inside the tag)
  {
      "keys": ["super+shift+b", "super+shift+right"],
      "command": "bh_key",
      "args":
      {
          "plugin":
          {
              "type": ["cfml", "html", "angle"],
              "command": "bh_modules.tagattrselect",
              "args": {"direction": "right"}
          }
      }
  },

  // Select the attribute to the left of the cursor (will wrap inside the tag)
  {
      "keys": ["super+shift+b", "super+shift+left"],
      "command": "bh_key",
      "args":
      {
          "plugin":
          {
              "type": ["cfml", "html", "angle"],
              "command": "bh_modules.tagattrselect",
              "args": {"direction": "left"}
          }
      }
  },

  // Fold contents between brackets
  {
      "keys": ["super+shift+b", "super+shift+["],
      "command": "bh_key",
      "args":
      {
          "plugin": {
              "type": ["__all__"],
              "command" : "bh_modules.foldbracket"
          }
      }
  },

  // Surround selection with brackets from quick panel
  {
      "keys": ["super+shift+b", "super+shift+w"],
      "command": "wrap_brackets"
  }
]
